# Inception Network (GoogLeNet variant) Batch Normalization
name: "GoogleNet_BN_DATA"
### Training Set
layer {
  name: 'input-data'
  type: 'Python'
  top: 'data'
  top: 'im_info'
  top: 'gt_boxes'
  top: 'face_ids'
  top: 'face_boxes'
  python_param {
    module: 'roi_data_layer.layer'
    layer: 'RoIDataLayer'
    param_str: "'num_classes': 5"
  }
}
layer {
  bottom: "data"
  top: "conv1/7x7_s2"
  name: "conv1/7x7_s2"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    stride: 2
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
## BN_DATA
layer {
  bottom: "conv1/7x7_s2"
  name: "conv1/7x7_s2/bn_new"
  top: "conv1/7x7_s2/bn"
  type: "BatchNorm"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
   moving_average_fraction: 0.99
   eps: 0.001
  }
}
layer {
  name: "conv1/7x7_s2/scale"
  type: "Scale"
  bottom: "conv1/7x7_s2/bn"
  top: "conv1/7x7_s2/bn"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}

layer {
  bottom: "conv1/7x7_s2/bn"
  top: "conv1/7x7_s2/bn"
  name: "conv1/relu_7x7"
  type: "ReLU"
}
layer {
  bottom: "conv1/7x7_s2/bn"
  top: "pool1/3x3_s2"
  name: "pool1/3x3_s2"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  bottom: "pool1/3x3_s2"
  top: "conv2/3x3_reduce"
  name: "conv2/3x3_reduce"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 64
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
## BN_DATA
layer {
  bottom: "conv2/3x3_reduce"
  name: "conv2/3x3_reduce/bn_new"
  top: "conv2/3x3_reduce/bn"
  type: "BatchNorm"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    
    moving_average_fraction: 0.99
    eps: 0.001
  }
}
layer {
  name: "conv2/3x3_reduce/scale"
  type: "Scale"
  bottom: "conv2/3x3_reduce/bn"
  top: "conv2/3x3_reduce/bn"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  bottom: "conv2/3x3_reduce/bn"
  top: "conv2/3x3_reduce/bn"
  name: "conv2/relu_3x3_reduce"
  type: "ReLU"
}
layer {
  bottom: "conv2/3x3_reduce/bn"
  top: "conv2/3x3"
  name: "conv2/3x3"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 192
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
## BN_DATA
layer {
  bottom: "conv2/3x3"
  name: "conv2/3x3/bn_new"
  top: "conv2/3x3/bn"
  type: "BatchNorm"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    
    moving_average_fraction: 0.99
    eps: 0.001
  }
}
layer {
  name: "conv2/3x3/scale"
  type: "Scale"
  bottom: "conv2/3x3/bn"
  top: "conv2/3x3/bn"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  bottom: "conv2/3x3/bn"
  top: "conv2/3x3/bn"
  name: "conv2/relu_3x3"
  type: "ReLU"
}
layer {
  bottom: "conv2/3x3/bn"
  top: "pool2/3x3_s2"
  name: "pool2/3x3_s2"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  bottom: "pool2/3x3_s2"
  top: "inception_3a/1x1"
  name: "inception_3a/1x1"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 64
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
## BN_DATA
layer {
  bottom: "inception_3a/1x1"
  name: "inception_3a/1x1/bn_new"
  top: "inception_3a/1x1/bn"
  type: "BatchNorm"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    
    moving_average_fraction: 0.99
    eps: 0.01
  }
}
layer {
  name: "inception_3a/1x1/scale"
  type: "Scale"
  bottom: "inception_3a/1x1/bn"
  top: "inception_3a/1x1/bn"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  bottom: "inception_3a/1x1/bn"
  top: "inception_3a/1x1/bn"
  name: "inception_3a/relu_1x1"
  type: "ReLU"
}
layer {
  bottom: "pool2/3x3_s2"
  top: "inception_3a/3x3_reduce"
  name: "inception_3a/3x3_reduce"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    #num_output: 96
    num_output: 64
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
## BN_DATA
layer {
  bottom: "inception_3a/3x3_reduce"
  name: "inception_3a/3x3_reduce/bn_new"
  top: "inception_3a/3x3_reduce/bn"
  type: "BatchNorm"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    
  moving_average_fraction: 0.99
  eps: 0.01
  }
}
layer {
  name: "inception_3a/3x3_reduce/scale"
  type: "Scale"
  bottom: "inception_3a/3x3_reduce/bn"
  top: "inception_3a/3x3_reduce/bn"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  bottom: "inception_3a/3x3_reduce/bn"
  top: "inception_3a/3x3_reduce/bn"
  name: "inception_3a/relu_3x3_reduce"
  type: "ReLU"
}
layer {
  bottom: "inception_3a/3x3_reduce/bn"
  top: "inception_3a/3x3"
  name: "inception_3a/3x3"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    #num_output: 128
    num_output: 64
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
## BN_DATA
layer {
  bottom: "inception_3a/3x3"
  name: "inception_3a/3x3/bn_new"
  top: "inception_3a/3x3/bn"
  type: "BatchNorm"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    
    moving_average_fraction: 0.99
    eps: 0.01
  }
}
layer {
  name: "inception_3a/3x3/scale"
  type: "Scale"
  bottom: "inception_3a/3x3/bn"
  top: "inception_3a/3x3/bn"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  bottom: "inception_3a/3x3/bn"
  top: "inception_3a/3x3/bn"
  name: "inception_3a/relu_3x3"
  type: "ReLU"
}
layer {
  bottom: "pool2/3x3_s2"
  top: "inception_3a/double3x3_reduce"
  name: "inception_3a/double3x3_reduce"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    #num_output: 16
    num_output: 64
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
## BN_DATA
layer {
  bottom: "inception_3a/double3x3_reduce"
  name: "inception_3a/double3x3_reduce/bn_new"
  top: "inception_3a/double3x3_reduce/bn"
  type: "BatchNorm"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    
    moving_average_fraction: 0.99
    eps: 0.001
  }
}
layer {
  name: "inception_3a/double3x3_reduce/scale"
  type: "Scale"
  bottom: "inception_3a/double3x3_reduce/bn"
  top: "inception_3a/double3x3_reduce/bn"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  bottom: "inception_3a/double3x3_reduce/bn"
  top: "inception_3a/double3x3_reduce/bn"
  name: "inception_3a/relu_double3x3_reduce"
  type: "ReLU"
}
layer {
  bottom: "inception_3a/double3x3_reduce/bn"
  top: "inception_3a/double3x3a"
  name: "inception_3a/double3x3a"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    #num_output: 32
    num_output: 96
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
## BN_DATA
layer {
  bottom: "inception_3a/double3x3a"
  name: "inception_3a/double3x3a/bn_new"
  top: "inception_3a/double3x3a/bn"
  type: "BatchNorm"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    
    moving_average_fraction: 0.99
    eps: 0.001
  }
}
layer {
  name: "inception_3a/double3x3a/scale"
  type: "Scale"
  bottom: "inception_3a/double3x3a/bn"
  top: "inception_3a/double3x3a/bn"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  bottom: "inception_3a/double3x3a/bn"
  top: "inception_3a/double3x3a/bn"
  name: "inception_3a/relu_double3x3a"
  type: "ReLU"
}
layer {
  bottom: "inception_3a/double3x3a/bn"
  top: "inception_3a/double3x3b"
  name: "inception_3a/double3x3b"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    #num_output: 32
    num_output: 96
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
## BN_DATA
layer {
  bottom: "inception_3a/double3x3b"
  name: "inception_3a/double3x3b/bn_new"
  top: "inception_3a/double3x3b/bn"
  type: "BatchNorm"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.001
  }
}
layer {
  name: "inception_3a/double3x3b/bn_scale"
  type: "Scale"
  bottom: "inception_3a/double3x3b/bn"
  top: "inception_3a/double3x3b/bn"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  bottom: "inception_3a/double3x3b/bn"
  top: "inception_3a/double3x3b/bn"
  name: "inception_3a/relu_double3x3b"
  type: "ReLU"
}
layer {
  bottom: "pool2/3x3_s2"
  top: "inception_3a/pool"
  name: "inception_3a/pool"
  type: "Pooling"
  pooling_param {
    #pool: MAX
    pool: AVE
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  bottom: "inception_3a/pool"
  top: "inception_3a/pool_proj"
  name: "inception_3a/pool_proj"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 32
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
## BN_DATA
layer {
  bottom: "inception_3a/pool_proj"
  name: "inception_3a/pool_proj/bn_new"
  top: "inception_3a/pool_proj/bn"
  type: "BatchNorm"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    
    moving_average_fraction: 0.99
    eps: 0.001
  }
}
layer {
  name: "inception_3a/pool_proj/scale"
  type: "Scale"
  bottom: "inception_3a/pool_proj/bn"
  top: "inception_3a/pool_proj/bn"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  bottom: "inception_3a/pool_proj/bn"
  top: "inception_3a/pool_proj/bn"
  name: "inception_3a/relu_pool_proj"
  type: "ReLU"
}
layer {
  bottom: "inception_3a/1x1/bn"
  bottom: "inception_3a/3x3/bn"
  bottom: "inception_3a/double3x3b/bn"
  bottom: "inception_3a/pool_proj/bn"
  top: "inception_3a/output"
  name: "inception_3a/output"
  type: "Concat"
}
layer {
  bottom: "inception_3a/output"
  top: "inception_3b/1x1"
  name: "inception_3b/1x1"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    #num_output: 128
    num_output: 64
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
## BN_DATA
layer {
  bottom: "inception_3b/1x1"
  name: "inception_3b/1x1/bn_new"
  top: "inception_3b/1x1/bn"
  type: "BatchNorm"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    
    moving_average_fraction: 0.99
    eps: 0.001
  }
}
layer {
  name: "inception_3b/1x1/scale"
  type: "Scale"
  bottom: "inception_3b/1x1/bn"
  top: "inception_3b/1x1/bn"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  bottom: "inception_3b/1x1/bn"
  top: "inception_3b/1x1/bn"
  name: "inception_3b/relu_1x1"
  type: "ReLU"
}
layer {
  bottom: "inception_3a/output"
  top: "inception_3b/3x3_reduce"
  name: "inception_3b/3x3_reduce"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    #num_output: 128
    num_output: 64
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
## BN_DATA
layer {
  bottom: "inception_3b/3x3_reduce"
  name: "inception_3b/3x3_reduce/bn_new"
  top: "inception_3b/3x3_reduce/bn"
  type: "BatchNorm"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    
    moving_average_fraction: 0.99
    eps: 0.001
  }
}
layer {
  name: "inception_3b/3x3_reduce/bn_scale"
  type: "Scale"
  bottom: "inception_3b/3x3_reduce/bn"
  top: "inception_3b/3x3_reduce/bn"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  bottom: "inception_3b/3x3_reduce/bn"
  top: "inception_3b/3x3_reduce/bn"
  name: "inception_3b/relu_3x3_reduce"
  type: "ReLU"
}
layer {
  bottom: "inception_3b/3x3_reduce/bn"
  top: "inception_3b/3x3"
  name: "inception_3b/3x3"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    #num_output: 192
    num_output: 96
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
## BN_DATA
layer {
  bottom: "inception_3b/3x3"
  name: "inception_3b/3x3/bn_new"
  top: "inception_3b/3x3/bn"
  type: "BatchNorm"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    
    moving_average_fraction: 0.99
    eps: 0.001
  }
}
layer {
  name: "inception_3b/3x3/bn_scale"
  type: "Scale"
  bottom: "inception_3b/3x3/bn"
  top: "inception_3b/3x3/bn"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  bottom: "inception_3b/3x3/bn"
  top: "inception_3b/3x3/bn"
  name: "inception_3b/relu_3x3"
  type: "ReLU"
}
layer {
  bottom: "inception_3a/output"
  top: "inception_3b/double3x3_reduce"
  name: "inception_3b/double3x3_reduce"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    #num_output: 32
    num_output: 64
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
## BN_DATA
layer {
  bottom: "inception_3b/double3x3_reduce"
  name: "inception_3b/double3x3_reduce/bn_new"
  top: "inception_3b/double3x3_reduce/bn"
  type: "BatchNorm"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    
    moving_average_fraction: 0.99
    eps: 0.001
  }
}
layer {
  name: "inception_3b/double3x3_reduce/bn_scale"
  type: "Scale"
  bottom: "inception_3b/double3x3_reduce/bn"
  top: "inception_3b/double3x3_reduce/bn"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  bottom: "inception_3b/double3x3_reduce/bn"
  top: "inception_3b/double3x3_reduce/bn"
  name: "inception_3b/relu_double3x3_reduce"
  type: "ReLU"
}
layer {
  bottom: "inception_3b/double3x3_reduce/bn"
  top: "inception_3b/double3x3a"
  name: "inception_3b/double3x3a"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 96
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
## BN_DATA
layer {
  bottom: "inception_3b/double3x3a"
  name: "inception_3b/double3x3a/bn_new"
  top: "inception_3b/double3x3a/bn"
  type: "BatchNorm"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    
    moving_average_fraction: 0.99
    eps: 0.001
  }
}
layer {
  name: "inception_3b/double3x3a/bn_scale"
  type: "Scale"
  bottom: "inception_3b/double3x3a/bn"
  top: "inception_3b/double3x3a/bn"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  bottom: "inception_3b/double3x3a/bn"
  top: "inception_3b/double3x3a/bn"
  name: "inception_3b/relu_double3x3a"
  type: "ReLU"
}
layer {
  bottom: "inception_3b/double3x3a/bn"
  top: "inception_3b/double3x3b"
  name: "inception_3b/double3x3b"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 96
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
## BN_DATA
layer {
  bottom: "inception_3b/double3x3b"
  name: "inception_3b/double3x3b/bn_new"
  top: "inception_3b/double3x3b/bn"
  type: "BatchNorm"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    
    moving_average_fraction: 0.99
    eps: 0.001
  }
}
layer {
  name: "inception_3b/double3x3b/bn_scale"
  type: "Scale"
  bottom: "inception_3b/double3x3b/bn"
  top: "inception_3b/double3x3b/bn"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  bottom: "inception_3b/double3x3b/bn"
  top: "inception_3b/double3x3b/bn"
  name: "inception_3b/relu_double3x3b"
  type: "ReLU"
}
layer {
  bottom: "inception_3a/output"
  top: "inception_3b/pool"
  name: "inception_3b/pool"
  type: "Pooling"
  pooling_param {
    #pool: MAX
    pool: AVE
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  bottom: "inception_3b/pool"
  top: "inception_3b/pool_proj"
  name: "inception_3b/pool_proj"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 64
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
## BN_DATA
layer {
  bottom: "inception_3b/pool_proj"
  name: "inception_3b/pool_proj/bn_new"
  top: "inception_3b/pool_proj/bn"
  type: "BatchNorm"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    
    moving_average_fraction: 0.99
    eps: 0.001
  }
}
layer {
  name: "inception_3b/pool_proj/bn_scale"
  type: "Scale"
  bottom: "inception_3b/pool_proj/bn"
  top: "inception_3b/pool_proj/bn"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  bottom: "inception_3b/pool_proj/bn"
  top: "inception_3b/pool_proj/bn"
  name: "inception_3b/relu_pool_proj"
  type: "ReLU"
}
layer {
  bottom: "inception_3b/1x1/bn"
  bottom: "inception_3b/3x3/bn"
  bottom: "inception_3b/double3x3b/bn"
  bottom: "inception_3b/pool_proj/bn"
  top: "inception_3b/output"
  name: "inception_3b/output"
  type: "Concat"
}
layer {
  bottom: "inception_3b/output"
  top: "inception_3c/3x3_reduce"
  name: "inception_3c/3x3_reduce"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
## BN_DATA
layer {
  bottom: "inception_3c/3x3_reduce"
  name: "inception_3c/3x3_reduce/bn_new"
  top: "inception_3c/3x3_reduce/bn"
  type: "BatchNorm"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    
    moving_average_fraction: 0.99
    eps: 0.001
  }
}
layer {
  name: "inception_3c/3x3_reduce/bn_scale"
  type: "Scale"
  bottom: "inception_3c/3x3_reduce/bn"
  top: "inception_3c/3x3_reduce/bn"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  bottom: "inception_3c/3x3_reduce/bn"
  top: "inception_3c/3x3_reduce/bn"
  name: "inception_3c/relu_3x3_reduce"
  type: "ReLU"
}
layer {
  bottom: "inception_3c/3x3_reduce/bn"
  top: "inception_3c/3x3"
  name: "inception_3c/3x3"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 160
    pad: 1
    stride: 2
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
## BN_DATA
layer {
  bottom: "inception_3c/3x3"
  name: "inception_3c/3x3/bn_new"
  top: "inception_3c/3x3/bn"
  type: "BatchNorm"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    
    moving_average_fraction: 0.99
    eps: 0.001
  }
}
layer {
  name: "inception_3c/3x3/bn_scale"
  type: "Scale"
  bottom: "inception_3c/3x3/bn"
  top: "inception_3c/3x3/bn"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  bottom: "inception_3c/3x3/bn"
  top: "inception_3c/3x3/bn"
  name: "inception_3c/relu_3x3"
  type: "ReLU"
}
layer {
  bottom: "inception_3b/output"
  top: "inception_3c/double3x3_reduce"
  name: "inception_3c/double3x3_reduce"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 64
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
## BN_DATA
layer {
  bottom: "inception_3c/double3x3_reduce"
  name: "inception_3c/double3x3_reduce/bn_new"
  top: "inception_3c/double3x3_reduce/bn"
  type: "BatchNorm"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    
    moving_average_fraction: 0.99
    eps: 0.001
  }
}
layer {
  name: "inception_3c/double3x3_reduce/bn_scale"
  type: "Scale"
  bottom: "inception_3c/double3x3_reduce/bn"
  top: "inception_3c/double3x3_reduce/bn"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  bottom: "inception_3c/double3x3_reduce/bn"
  top: "inception_3c/double3x3_reduce/bn"
  name: "inception_3c/relu_double3x3_reduce"
  type: "ReLU"
}
layer {
  bottom: "inception_3c/double3x3_reduce/bn"
  top: "inception_3c/double3x3a"
  name: "inception_3c/double3x3a"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 96
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
## BN_DATA
layer {
  bottom: "inception_3c/double3x3a"
  name: "inception_3c/double3x3a/bn_new"
  top: "inception_3c/double3x3a/bn"
  type: "BatchNorm"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    
    moving_average_fraction: 0.99
    eps: 0.001
  }
}
layer {
  name: "inception_3c/double3x3a/bn_scale"
  type: "Scale"
  bottom: "inception_3c/double3x3a/bn"
  top: "inception_3c/double3x3a/bn"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  bottom: "inception_3c/double3x3a/bn"
  top: "inception_3c/double3x3a/bn"
  name: "inception_3c/relu_double3x3a"
  type: "ReLU"
}
layer {
  bottom: "inception_3c/double3x3a/bn"
  top: "inception_3c/double3x3b"
  name: "inception_3c/double3x3b"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 96
    pad: 1
    stride: 2
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
## BN_DATA
layer {
  bottom: "inception_3c/double3x3b"
  name: "inception_3c/double3x3b/bn_new"
  top: "inception_3c/double3x3b/bn"
  type: "BatchNorm"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    
    moving_average_fraction: 0.99
    eps: 0.001
  }
}
layer {
  name: "inception_3c/double3x3b/bn_scale"
  type: "Scale"
  bottom: "inception_3c/double3x3b/bn"
  top: "inception_3c/double3x3b/bn"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  bottom: "inception_3c/double3x3b/bn"
  top: "inception_3c/double3x3b/bn"
  name: "inception_3c/relu_double3x3b"
  type: "ReLU"
}
layer {
  bottom: "inception_3b/output"
  top: "inception_3c/pool/3x3_s2"
  name: "inception_3c/pool/3x3_s2"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  bottom: "inception_3c/3x3/bn"
  bottom: "inception_3c/double3x3b/bn"
  bottom: "inception_3c/pool/3x3_s2"
  top: "inception_3c/output"
  name: "inception_3c/output"
  type: "Concat"
}
layer {
  bottom: "inception_3c/output"
  top: "inception_4a/1x1"
  name: "inception_4a/1x1"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    #num_output: 192
    num_output: 224
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
## BN_DATA
layer {
  bottom: "inception_4a/1x1"
  name: "inception_4a/1x1/bn_new"
  top: "inception_4a/1x1/bn"
  type: "BatchNorm"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    
    moving_average_fraction: 0.99
    eps: 0.001
  }
}
layer {
  name: "inception_4a/1x1/bn_scale"
  type: "Scale"
  bottom: "inception_4a/1x1/bn"
  top: "inception_4a/1x1/bn"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  bottom: "inception_4a/1x1/bn"
  top: "inception_4a/1x1/bn"
  name: "inception_4a/relu_1x1"
  type: "ReLU"
}
layer {
  bottom: "inception_3c/output"
  top: "inception_4a/3x3_reduce"
  name: "inception_4a/3x3_reduce"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    #num_output: 96
    num_output: 64
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
## BN_DATA
layer {
  bottom: "inception_4a/3x3_reduce"
  name: "inception_4a/3x3_reduce/bn_new"
  top: "inception_4a/3x3_reduce/bn"
  type: "BatchNorm"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    
    moving_average_fraction: 0.99
    eps: 0.001
  }
}
layer {
  name: "inception_4a/3x3_reduce/bn_scale"
  type: "Scale"
  bottom: "inception_4a/3x3_reduce/bn"
  top: "inception_4a/3x3_reduce/bn"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  bottom: "inception_4a/3x3_reduce/bn"
  top: "inception_4a/3x3_reduce/bn"
  name: "inception_4a/relu_3x3_reduce"
  type: "ReLU"
}
layer {
  bottom: "inception_4a/3x3_reduce/bn"
  top: "inception_4a/3x3"
  name: "inception_4a/3x3"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    #num_output: 208
    num_output: 96
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
## BN_DATA
layer {
  bottom: "inception_4a/3x3"
  name: "inception_4a/3x3/bn_new"
  top: "inception_4a/3x3/bn"
  type: "BatchNorm"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    
    moving_average_fraction: 0.99
    eps: 0.001
  }
}
layer {
  name: "inception_4a/3x3/bn_scale"
  type: "Scale"
  bottom: "inception_4a/3x3/bn"
  top: "inception_4a/3x3/bn"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  bottom: "inception_4a/3x3/bn"
  top: "inception_4a/3x3/bn"
  name: "inception_4a/relu_3x3"
  type: "ReLU"
}
layer {
  bottom: "inception_3c/output"
  top: "inception_4a/double3x3_reduce"
  name: "inception_4a/double3x3_reduce"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    #num_output: 16
    num_output: 96
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
## BN_DATA
layer {
  bottom: "inception_4a/double3x3_reduce"
  name: "inception_4a/double3x3_reduce/bn_new"
  top: "inception_4a/double3x3_reduce/bn"
  type: "BatchNorm"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    
    moving_average_fraction: 0.99
    eps: 0.001
  }
}
layer {
  name: "inception_4a/double3x3_reduce/bn_scale"
  type: "Scale"
  bottom: "inception_4a/double3x3_reduce/bn"
  top: "inception_4a/double3x3_reduce/bn"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  bottom: "inception_4a/double3x3_reduce/bn"
  top: "inception_4a/double3x3_reduce/bn"
  name: "inception_4a/relu_double3x3_reduce"
  type: "ReLU"
}
layer {
  bottom: "inception_4a/double3x3_reduce/bn"
  top: "inception_4a/double3x3a"
  name: "inception_4a/double3x3a"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    #num_output: 48
    num_output: 128
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
## BN_DATA
layer {
  bottom: "inception_4a/double3x3a"
  name: "inception_4a/double3x3a/bn_new"
  top: "inception_4a/double3x3a/bn"
  type: "BatchNorm"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    
    moving_average_fraction: 0.99
    eps: 0.001
  }
}
layer {
  name: "inception_4a/double3x3a/bn_scale"
  type: "Scale"
  bottom: "inception_4a/double3x3a/bn"
  top: "inception_4a/double3x3a/bn"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  bottom: "inception_4a/double3x3a/bn"
  top: "inception_4a/double3x3a/bn"
  name: "inception_4a/relu_double3x3a"
  type: "ReLU"
}
layer {
  bottom: "inception_4a/double3x3a/bn"
  top: "inception_4a/double3x3b"
  name: "inception_4a/double3x3b"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
## BN_DATA
layer {
  bottom: "inception_4a/double3x3b"
  name: "inception_4a/double3x3b/bn_new"
  top: "inception_4a/double3x3b/bn"
  type: "BatchNorm"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    
    moving_average_fraction: 0.99
    eps: 0.001
  }
}
layer {
  name: "inception_4a/double3x3b/bn_scale"
  type: "Scale"
  bottom: "inception_4a/double3x3b/bn"
  top: "inception_4a/double3x3b/bn"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  bottom: "inception_4a/double3x3b/bn"
  top: "inception_4a/double3x3b/bn"
  name: "inception_4a/relu_double3x3b"
  type: "ReLU"
}
layer {
  bottom: "inception_3c/output"
  top: "inception_4a/pool"
  name: "inception_4a/pool"
  type: "Pooling"
  pooling_param {
    #pool: MAX
    pool: AVE
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  bottom: "inception_4a/pool"
  top: "inception_4a/pool_proj"
  name: "inception_4a/pool_proj"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    #num_output: 64
    num_output: 128
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
## BN_DATA
layer {
  bottom: "inception_4a/pool_proj"
  name: "inception_4a/pool_proj/bn_new"
  top: "inception_4a/pool_proj/bn"
  type: "BatchNorm"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    
    moving_average_fraction: 0.99
    eps: 0.001
  }
}
layer {
  name: "inception_4a/pool_proj/bn_scale"
  type: "Scale"
  bottom: "inception_4a/pool_proj/bn"
  top: "inception_4a/pool_proj/bn"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  bottom: "inception_4a/pool_proj/bn"
  top: "inception_4a/pool_proj/bn"
  name: "inception_4a/relu_pool_proj"
  type: "ReLU"
}
layer {
  bottom: "inception_4a/1x1/bn"
  bottom: "inception_4a/3x3/bn"
  bottom: "inception_4a/double3x3b/bn"
  bottom: "inception_4a/pool_proj/bn"
  top: "inception_4a/output"
  name: "inception_4a/output"
  type: "Concat"
}
layer {
  bottom: "inception_4a/output"
  top: "inception_4b/1x1"
  name: "inception_4b/1x1"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    #num_output: 160
    num_output: 192
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
## BN_DATA
layer {
  bottom: "inception_4b/1x1"
  name: "inception_4b/1x1/bn_new"
  top: "inception_4b/1x1/bn"
  type: "BatchNorm"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    
    moving_average_fraction: 0.99
    eps: 0.001
  }
}
layer {
  name: "inception_4b/1x1/bn_scale"
  type: "Scale"
  bottom: "inception_4b/1x1/bn"
  top: "inception_4b/1x1/bn"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  bottom: "inception_4b/1x1/bn"
  top: "inception_4b/1x1/bn"
  name: "inception_4b/relu_1x1"
  type: "ReLU"
}
layer {
  bottom: "inception_4a/output"
  top: "inception_4b/3x3_reduce"
  name: "inception_4b/3x3_reduce"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    #num_output: 112
    num_output: 96
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
## BN_DATA
layer {
  bottom: "inception_4b/3x3_reduce"
  name: "inception_4b/3x3_reduce/bn_new"
  top: "inception_4b/3x3_reduce/bn"
  type: "BatchNorm"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    
    moving_average_fraction: 0.99
    eps: 0.001
  }
}
layer {
  name: "inception_4b/3x3_reduce/bn_scale"
  type: "Scale"
  bottom: "inception_4b/3x3_reduce/bn"
  top: "inception_4b/3x3_reduce/bn"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  bottom: "inception_4b/3x3_reduce/bn"
  top: "inception_4b/3x3_reduce/bn"
  name: "inception_4b/relu_3x3_reduce"
  type: "ReLU"
}
layer {
  bottom: "inception_4b/3x3_reduce/bn"
  top: "inception_4b/3x3"
  name: "inception_4b/3x3"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    #num_output: 224
    num_output: 128
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
## BN_DATA
layer {
  bottom: "inception_4b/3x3"
  name: "inception_4b/3x3/bn_new"
  top: "inception_4b/3x3/bn"
  type: "BatchNorm"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    
    moving_average_fraction: 0.99
    eps: 0.001
  }
}
layer {
  name: "inception_4b/3x3/bn_scale"
  type: "Scale"
  bottom: "inception_4b/3x3/bn"
  top: "inception_4b/3x3/bn"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  bottom: "inception_4b/3x3/bn"
  top: "inception_4b/3x3/bn"
  name: "inception_4b/relu_3x3"
  type: "ReLU"
}
layer {
  bottom: "inception_4a/output"
  top: "inception_4b/double3x3_reduce"
  name: "inception_4b/double3x3_reduce"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    #num_output: 24
    num_output: 96
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
## BN_DATA
layer {
  bottom: "inception_4b/double3x3_reduce"
  name: "inception_4b/double3x3_reduce/bn_new"
  top: "inception_4b/double3x3_reduce/bn"
  type: "BatchNorm"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    
    moving_average_fraction: 0.99
    eps: 0.001
  }
}
layer {
  name: "inception_4b/double3x3_reduce/bn_scale"
  type: "Scale"
  bottom: "inception_4b/double3x3_reduce/bn"
  top: "inception_4b/double3x3_reduce/bn"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  bottom: "inception_4b/double3x3_reduce/bn"
  top: "inception_4b/double3x3_reduce/bn"
  name: "inception_4b/relu_double3x3_reduce"
  type: "ReLU"
}
layer {
  bottom: "inception_4b/double3x3_reduce/bn"
  top: "inception_4b/double3x3a"
  name: "inception_4b/double3x3a"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    #num_output: 64
    num_output: 128
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
## BN_DATA
layer {
  bottom: "inception_4b/double3x3a"
  name: "inception_4b/double3x3a/bn_new"
  top: "inception_4b/double3x3a/bn"
  type: "BatchNorm"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    
    moving_average_fraction: 0.99
    eps: 0.001
  }
}
layer {
  name: "inception_4b/double3x3a/bn_scale"
  type: "Scale"
  bottom: "inception_4b/double3x3a/bn"
  top: "inception_4b/double3x3a/bn"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}

layer {
  bottom: "inception_4b/double3x3a/bn"
  top: "inception_4b/double3x3a/bn"
  name: "inception_4b/relu_double3x3a"
  type: "ReLU"
}
layer {
  bottom: "inception_4b/double3x3a/bn"
  top: "inception_4b/double3x3b"
  name: "inception_4b/double3x3b"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
## BN_DATA
layer {
  bottom: "inception_4b/double3x3b"
  name: "inception_4b/double3x3b/bn_new"
  top: "inception_4b/double3x3b/bn"
  type: "BatchNorm"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    
    moving_average_fraction: 0.99
    eps: 0.001
  }
}
layer {
  name: "inception_4b/double3x3b/bn_scale"
  type: "Scale"
  bottom: "inception_4b/double3x3b/bn"
  top: "inception_4b/double3x3b/bn"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  bottom: "inception_4b/double3x3b/bn"
  top: "inception_4b/double3x3b/bn"
  name: "inception_4b/relu_double3x3b"
  type: "ReLU"
}
layer {
  bottom: "inception_4a/output"
  top: "inception_4b/pool"
  name: "inception_4b/pool"
  type: "Pooling"
  pooling_param {
    #pool: MAX
    pool: AVE
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  bottom: "inception_4b/pool"
  top: "inception_4b/pool_proj"
  name: "inception_4b/pool_proj"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
## BN_DATA
layer {
  bottom: "inception_4b/pool_proj"
  name: "inception_4b/pool_proj/bn_new"
  top: "inception_4b/pool_proj/bn"
  type: "BatchNorm"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    
    moving_average_fraction: 0.99
    eps: 0.001
  }
}
layer {
  name: "inception_4b/pool_proj/bn_scale"
  type: "Scale"
  bottom: "inception_4b/pool_proj/bn"
  top: "inception_4b/pool_proj/bn"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  bottom: "inception_4b/pool_proj/bn"
  top: "inception_4b/pool_proj/bn"
  name: "inception_4b/relu_pool_proj"
  type: "ReLU"
}
layer {
  bottom: "inception_4b/1x1/bn"
  bottom: "inception_4b/3x3/bn"
  bottom: "inception_4b/double3x3b/bn"
  bottom: "inception_4b/pool_proj/bn"
  top: "inception_4b/output"
  name: "inception_4b/output"
  type: "Concat"
}
layer {
  bottom: "inception_4b/output"
  top: "inception_4c/1x1"
  name: "inception_4c/1x1"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    #num_output: 128
    num_output: 160
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
## BN_DATA
layer {
  bottom: "inception_4c/1x1"
  name: "inception_4c/1x1/bn_new"
  top: "inception_4c/1x1/bn"
  type: "BatchNorm"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    
    moving_average_fraction: 0.99
    eps: 0.001
  }
}
layer {
  name: "inception_4c/1x1/bn_scale"
  type: "Scale"
  bottom: "inception_4c/1x1/bn"
  top: "inception_4c/1x1/bn"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  bottom: "inception_4c/1x1/bn"
  top: "inception_4c/1x1/bn"
  name: "inception_4c/relu_1x1"
  type: "ReLU"
}
layer {
  bottom: "inception_4b/output"
  top: "inception_4c/3x3_reduce"
  name: "inception_4c/3x3_reduce"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
## BN_DATA
layer {
  bottom: "inception_4c/3x3_reduce"
  name: "inception_4c/3x3_reduce/bn_new"
  top: "inception_4c/3x3_reduce/bn"
  type: "BatchNorm"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    
    moving_average_fraction: 0.99
    eps: 0.001
  }
}
layer {
  name: "inception_4c/3x3_reduce/bn_scale"
  type: "Scale"
  bottom: "inception_4c/3x3_reduce/bn"
  top: "inception_4c/3x3_reduce/bn"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  bottom: "inception_4c/3x3_reduce/bn"
  top: "inception_4c/3x3_reduce/bn"
  name: "inception_4c/relu_3x3_reduce"
  type: "ReLU"
}
layer {
  bottom: "inception_4c/3x3_reduce/bn"
  top: "inception_4c/3x3"
  name: "inception_4c/3x3"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 160
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
## BN_DATA
layer {
  bottom: "inception_4c/3x3"
  name: "inception_4c/3x3/bn_new"
  top: "inception_4c/3x3/bn"
  type: "BatchNorm"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    
    moving_average_fraction: 0.99
    eps: 0.001
  }
}
layer {
  name: "inception_4c/3x3/bn_scale"
  type: "Scale"
  bottom: "inception_4c/3x3/bn"
  top: "inception_4c/3x3/bn"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  bottom: "inception_4c/3x3/bn"
  top: "inception_4c/3x3/bn"
  name: "inception_4c/relu_3x3"
  type: "ReLU"
}
layer {
  bottom: "inception_4b/output"
  top: "inception_4c/double3x3_reduce"
  name: "inception_4c/double3x3_reduce"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    #num_output: 24
    num_output: 128
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
## BN_DATA
layer {
  bottom: "inception_4c/double3x3_reduce"
  name: "inception_4c/double3x3_reduce/bn_new"
  top: "inception_4c/double3x3_reduce/bn"
  type: "BatchNorm"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    
    moving_average_fraction: 0.99
    eps: 0.001
  }
}
layer {
  name: "inception_4c/double3x3_reduce/bn_scale"
  type: "Scale"
  bottom: "inception_4c/double3x3_reduce/bn"
  top: "inception_4c/double3x3_reduce/bn"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  bottom: "inception_4c/double3x3_reduce/bn"
  top: "inception_4c/double3x3_reduce/bn"
  name: "inception_4c/relu_double3x3_reduce"
  type: "ReLU"
}
layer {
  bottom: "inception_4c/double3x3_reduce/bn"
  top: "inception_4c/double3x3a"
  name: "inception_4c/double3x3a"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    #num_output: 64
    num_output: 160
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
## BN_DATA
layer {
  bottom: "inception_4c/double3x3a"
  name: "inception_4c/double3x3a/bn_new"
  top: "inception_4c/double3x3a/bn"
  type: "BatchNorm"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    
    moving_average_fraction: 0.99
    eps: 0.001
  }
}
layer {
  name: "inception_4c/double3x3a/bn_scale"
  type: "Scale"
  bottom: "inception_4c/double3x3a/bn"
  top: "inception_4c/double3x3a/bn"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  bottom: "inception_4c/double3x3a/bn"
  top: "inception_4c/double3x3a/bn"
  name: "inception_4c/relu_double3x3a"
  type: "ReLU"
}
layer {
  bottom: "inception_4c/double3x3a/bn"
  top: "inception_4c/double3x3b"
  name: "inception_4c/double3x3b"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 160
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
## BN_DATA
layer {
  bottom: "inception_4c/double3x3b"
  name: "inception_4c/double3x3b/bn_new"
  top: "inception_4c/double3x3b/bn"
  type: "BatchNorm"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    
    moving_average_fraction: 0.99
    eps: 0.001
  }
}
layer {
  name: "inception_4c/double3x3b/bn_scale"
  type: "Scale"
  bottom: "inception_4c/double3x3b/bn"
  top: "inception_4c/double3x3b/bn"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  bottom: "inception_4c/double3x3b/bn"
  top: "inception_4c/double3x3b/bn"
  name: "inception_4c/relu_double3x3b"
  type: "ReLU"
}
layer {
  bottom: "inception_4b/output"
  top: "inception_4c/pool"
  name: "inception_4c/pool"
  type: "Pooling"
  pooling_param {
    #pool: MAX
    pool: AVE
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  bottom: "inception_4c/pool"
  top: "inception_4c/pool_proj"
  name: "inception_4c/pool_proj"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    #num_output: 64
    num_output: 128
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
## BN_DATA
layer {
  bottom: "inception_4c/pool_proj"
  name: "inception_4c/pool_proj/bn_new"
  top: "inception_4c/pool_proj/bn"
  type: "BatchNorm"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    
    moving_average_fraction: 0.99
    eps: 0.001
  }
}
layer {
  name: "inception_4c/pool_proj/bn_scale"
  type: "Scale"
  bottom: "inception_4c/pool_proj/bn"
  top: "inception_4c/pool_proj/bn"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  bottom: "inception_4c/pool_proj/bn"
  top: "inception_4c/pool_proj/bn"
  name: "inception_4c/relu_pool_proj"
  type: "ReLU"
}
layer {
  bottom: "inception_4c/1x1/bn"
  bottom: "inception_4c/3x3/bn"
  bottom: "inception_4c/double3x3b/bn"
  bottom: "inception_4c/pool_proj/bn"
  top: "inception_4c/output"
  name: "inception_4c/output"
  type: "Concat"
}
layer {
  bottom: "inception_4c/output"
  top: "inception_4d/1x1"
  name: "inception_4d/1x1"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 96
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
## BN_DATA
layer {
  bottom: "inception_4d/1x1"
  name: "inception_4d/1x1/bn_new"
  top: "inception_4d/1x1/bn"
  type: "BatchNorm"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    
    moving_average_fraction: 0.99
    eps: 0.001
  }
}
layer {
  name: "inception_4d/1x1/bn_scale"
  type: "Scale"
  bottom: "inception_4d/1x1/bn"
  top: "inception_4d/1x1/bn"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  bottom: "inception_4d/1x1/bn"
  top: "inception_4d/1x1/bn"
  name: "inception_4d/relu_1x1"
  type: "ReLU"
}
layer {
  bottom: "inception_4c/output"
  top: "inception_4d/3x3_reduce"
  name: "inception_4d/3x3_reduce"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    #num_output: 144
    num_output: 128
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
## BN_DATA
layer {
  bottom: "inception_4d/3x3_reduce"
  name: "inception_4d/3x3_reduce/bn_new"
  top: "inception_4d/3x3_reduce/bn"
  type: "BatchNorm"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    
    moving_average_fraction: 0.99
    eps: 0.001
  }
}
layer {
  name: "inception_4d/3x3_reduce/bn_scale"
  type: "Scale"
  bottom: "inception_4d/3x3_reduce/bn"
  top: "inception_4d/3x3_reduce/bn"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  bottom: "inception_4d/3x3_reduce/bn"
  top: "inception_4d/3x3_reduce/bn"
  name: "inception_4d/relu_3x3_reduce"
  type: "ReLU"
}
layer {
  bottom: "inception_4d/3x3_reduce/bn"
  top: "inception_4d/3x3"
  name: "inception_4d/3x3"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    #num_output: 288
    num_output: 192
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
## BN_DATA
layer {
  bottom: "inception_4d/3x3"
  name: "inception_4d/3x3/bn_new"
  top: "inception_4d/3x3/bn"
  type: "BatchNorm"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    
    moving_average_fraction: 0.99
    eps: 0.001
  }
}
layer {
  name: "inception_4d/3x3/bn_scale"
  type: "Scale"
  bottom: "inception_4d/3x3/bn"
  top: "inception_4d/3x3/bn"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  bottom: "inception_4d/3x3/bn"
  top: "inception_4d/3x3/bn"
  name: "inception_4d/relu_3x3"
  type: "ReLU"
}
layer {
  bottom: "inception_4c/output"
  top: "inception_4d/double3x3_reduce"
  name: "inception_4d/double3x3_reduce"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    #num_output: 32
    num_output: 160
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
## BN_DATA
layer {
  bottom: "inception_4d/double3x3_reduce"
  name: "inception_4d/double3x3_reduce/bn_new"
  top: "inception_4d/double3x3_reduce/bn"
  type: "BatchNorm"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    
    moving_average_fraction: 0.99
    eps: 0.001
  }
}
layer {
  name: "inception_4d/double3x3_reduce/bn_scale"
  type: "Scale"
  bottom: "inception_4d/double3x3_reduce/bn"
  top: "inception_4d/double3x3_reduce/bn"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  bottom: "inception_4d/double3x3_reduce/bn"
  top: "inception_4d/double3x3_reduce/bn"
  name: "inception_4d/relu_double3x3_reduce"
  type: "ReLU"
}
layer {
  bottom: "inception_4d/double3x3_reduce/bn"
  top: "inception_4d/double3x3a"
  name: "inception_4d/double3x3a"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    #num_output: 64
    num_output: 192
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
## BN_DATA
layer {
  bottom: "inception_4d/double3x3a"
  name: "inception_4d/double3x3a/bn_new"
  top: "inception_4d/double3x3a/bn"
  type: "BatchNorm"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    
    moving_average_fraction: 0.99
    eps: 0.001
  }
}
layer {
  name: "inception_4d/double3x3a/bn_scale"
  type: "Scale"
  bottom: "inception_4d/double3x3a/bn"
  top: "inception_4d/double3x3a/bn"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  bottom: "inception_4d/double3x3a/bn"
  top: "inception_4d/double3x3a/bn"
  name: "inception_4d/relu_double3x3a"
  type: "ReLU"
}
layer {
  bottom: "inception_4d/double3x3a/bn"
  top: "inception_4d/double3x3b"
  name: "inception_4d/double3x3b"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 192
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
## BN_DATA
layer {
  bottom: "inception_4d/double3x3b"
  name: "inception_4d/double3x3b/bn_new"
  top: "inception_4d/double3x3b/bn"
  type: "BatchNorm"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    
    moving_average_fraction: 0.99
    eps: 0.001
  }
}
layer {
  name: "inception_4d/double3x3b/bn_scale"
  type: "Scale"
  bottom: "inception_4d/double3x3b/bn"
  top: "inception_4d/double3x3b/bn"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  bottom: "inception_4d/double3x3b/bn"
  top: "inception_4d/double3x3b/bn"
  name: "inception_4d/relu_double3x3b"
  type: "ReLU"
}
layer {
  bottom: "inception_4c/output"
  top: "inception_4d/pool"
  name: "inception_4d/pool"
  type: "Pooling"
  pooling_param {
    #pool: MAX
    pool: AVE
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  bottom: "inception_4d/pool"
  top: "inception_4d/pool_proj"
  name: "inception_4d/pool_proj"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    #num_output: 64
    num_output: 128
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
## BN_DATA
layer {
  bottom: "inception_4d/pool_proj"
  name: "inception_4d/pool_proj/bn_new"
  top: "inception_4d/pool_proj/bn"
  type: "BatchNorm"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    
    moving_average_fraction: 0.99
    eps: 0.001
  }
}
layer {
  name: "inception_4d/pool_proj/bn_scale"
  type: "Scale"
  bottom: "inception_4d/pool_proj/bn"
  top: "inception_4d/pool_proj/bn"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  bottom: "inception_4d/pool_proj/bn"
  top: "inception_4d/pool_proj/bn"
  name: "inception_4d/relu_pool_proj"
  type: "ReLU"
}
layer {
  bottom: "inception_4d/1x1/bn"
  bottom: "inception_4d/3x3/bn"
  bottom: "inception_4d/double3x3b/bn"
  bottom: "inception_4d/pool_proj/bn"
  top: "inception_4d/output"
  name: "inception_4d/output"
  type: "Concat"
}

#========= RPN ============

layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "inception_4d/output"
  top: "rpn/output"
  param { lr_mult: 1.0 }
  param { lr_mult: 2.0 }
  convolution_param {
    num_output: 512
    kernel_size: 3 pad: 1 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}

layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_cls_score"
  param { lr_mult: 1.0 }
  param { lr_mult: 2.0 }
  convolution_param {
    num_output: 18   # 2(bg/fg) * 9(anchors)
    kernel_size: 1 pad: 0 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}

layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_bbox_pred"
  param { lr_mult: 1.0 }
  param { lr_mult: 2.0 }
  convolution_param {
    num_output: 36   # 4 * 9(anchors)
    kernel_size: 1 pad: 0 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}

layer {
   bottom: "rpn_cls_score"
   top: "rpn_cls_score_reshape"
   name: "rpn_cls_score_reshape"
   type: "Reshape"
   reshape_param { shape { dim: 0 dim: 2 dim: -1 dim: 0 } }
}

layer {
  name: 'rpn-data'
  type: 'Python'
  bottom: 'rpn_cls_score'
  bottom: 'gt_boxes'
  bottom: 'im_info'
  bottom: 'data'
  top: 'rpn_labels'
  top: 'rpn_bbox_targets'
  top: 'rpn_bbox_inside_weights'
  top: 'rpn_bbox_outside_weights'
  python_param {
    module: 'rpn.anchor_target_layer'
    layer: 'AnchorTargetLayer'
    param_str: "'feat_stride': 16"
  }
}

layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  propagate_down: 1
  propagate_down: 0
  top: "rpn_cls_loss"
  loss_weight: 1
  loss_param {
    ignore_label: -1
    normalize: true
  }
}

layer {
  name: "rpn_loss_bbox"
  type: "SmoothL1Loss"
  bottom: "rpn_bbox_pred"
  bottom: "rpn_bbox_targets"
  bottom: 'rpn_bbox_inside_weights'
  bottom: 'rpn_bbox_outside_weights'
  top: "rpn_loss_bbox"
  loss_weight: 1
  smooth_l1_loss_param { sigma: 3.0 }
}

#========= RoI Proposal ============

layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}

layer {
  name: 'rpn_cls_prob_reshape'
  type: 'Reshape'
  bottom: 'rpn_cls_prob'
  top: 'rpn_cls_prob_reshape'
  reshape_param { shape { dim: 0 dim: 18 dim: -1 dim: 0 } }
}

layer {
  name: 'proposal'
  type: 'Python'
  bottom: 'rpn_cls_prob_reshape'
  bottom: 'rpn_bbox_pred'
  bottom: 'im_info'
  top: 'rpn_rois'
#  top: 'rpn_scores'
  python_param {
    module: 'rpn.proposal_layer'
    layer: 'ProposalLayer'
    param_str: "'feat_stride': 16"
  }
}

#layer {
#  name: 'debug-data'
#  type: 'Python'
#  bottom: 'data'
#  bottom: 'rpn_rois'
#  bottom: 'rpn_scores'
#  python_param {
#    module: 'rpn.debug_layer'
#    layer: 'RPNDebugLayer'
#  }
#}

layer {
  name: 'roi-data'
  type: 'Python'
  bottom: 'rpn_rois'
  bottom: 'gt_boxes'
  top: 'rois'
  top: 'labels'
  top: 'bbox_targets'
  top: 'bbox_inside_weights'
  top: 'bbox_outside_weights'
  python_param {
    module: 'rpn.proposal_target_layer'
    layer: 'ProposalTargetLayer'
    param_str: "'num_classes': 5"
  }
}

#========= associate branch ============

layer {
  name: 'face_roi_data'
  type: 'Python'
  bottom: 'rpn_rois'
  bottom: 'gt_boxes'
  bottom: 'face_ids'
  bottom: 'face_boxes'
  top: 'associate_rois'
  top: 'associate_labels'
  python_param {
    module: 'rpn.face_proposal_link_layer'
    layer: 'FaceProposalLinkLayer'
    param_str: "'num_classes': 5"
  }
}
layer {
  name: "roi_pool_inception_4d/output_associate"
  type: "ROIPooling"
  bottom: "inception_4d/output"
  bottom: "associate_rois"
  top: "roi_pool_inception_4d/output_associate"
  roi_pooling_param {
    pooled_w: 4
    pooled_h: 4
    spatial_scale: 0.0625
  }
}

layer {
  bottom: "roi_pool_inception_4d/output_associate"
  top: "loss2/conv_associate"
  name: "loss2/conv_associate"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
## BN_DATA
layer {
  bottom: "loss2/conv_associate"
  name: "loss2/conv/bn_new_associate"
  top: "loss2/conv/bn_associate"
  type: "BatchNorm"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    
    moving_average_fraction: 0.99
    eps: 0.001
  }
}
layer {
  name: "loss2/conv/bn_scale_associate"
  type: "Scale"
  bottom: "loss2/conv/bn_associate"
  top: "loss2/conv/bn_associate"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  bottom: "loss2/conv/bn_associate"
  top: "loss2/conv/bn_associate"
  name: "loss2/relu_conv_associate"
  type: "ReLU"
}
# layer {
#   name: "Gather4"
#   type: "Gather"
#   bottom: "loss2/conv/bn"
#  top: "loss2/conv/bn_gather"
#}
layer {
  bottom: "loss2/conv/bn_associate"
  top: "loss2/fc_associate"
  name: "loss2/fc_associate"
  type: "InnerProduct"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  inner_product_param {
    num_output: 1024
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
####
layer {
  name: "loss2/fc/reshape_associate"
  type: "Reshape"
  bottom: "loss2/fc_associate"
  top: "loss2/fc/reshape_associate"
  reshape_param{
    shape{ dim: [-1,1024,1,1]}
  }
}
####
## BN_DATA
layer {
  bottom: "loss2/fc/reshape_associate"
  name: "loss2/fc/bn_new_associate"
  top: "loss2/fc/bn_associate"
  type: "BatchNorm"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    
    moving_average_fraction: 0.99
    eps: 0.001
  }
}
layer {
  name: "loss2/fc/bn_scale_associate"
  type: "Scale"
  bottom: "loss2/fc/bn_associate"
  top: "loss2/fc/bn_associate"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  bottom: "loss2/fc/bn_associate"
  top: "loss2/fc/bn_associate"
  name: "loss2/relu_fc_associate"
  type: "ReLU"
}
layer {
  bottom: "loss2/fc/bn_associate"
  top: "cls_score_associate"
  name: "cls_score_associate"
  type: "InnerProduct"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
   decay_mult: 0
  }
  inner_product_param {
    num_output: 2 
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "loss_cls_associate"
  type: "SoftmaxWithLoss"
  bottom: "cls_score_associate"
  bottom: "associate_labels"
  propagate_down: 1
  propagate_down: 0
  top: "associate_loss_cls"
  loss_weight: 1
}

#========= RCNN ============
layer {
  name: "roi_pool_inception_4d/output"
  type: "ROIPooling"
  bottom: "inception_4d/output"
  bottom: "rois"
  top: "roi_pool_inception_4d/output"
  roi_pooling_param {
    pooled_w: 4
    pooled_h: 4
    spatial_scale: 0.0625
  }
}

layer {
  bottom: "roi_pool_inception_4d/output"
  top: "loss2/conv"
  name: "loss2/conv"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
## BN_DATA
layer {
  bottom: "loss2/conv"
  name: "loss2/conv/bn_new"
  top: "loss2/conv/bn"
  type: "BatchNorm"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    
    moving_average_fraction: 0.99
    eps: 0.001
  }
}
layer {
  name: "loss2/conv/bn_scale"
  type: "Scale"
  bottom: "loss2/conv/bn"
  top: "loss2/conv/bn"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  bottom: "loss2/conv/bn"
  top: "loss2/conv/bn"
  name: "loss2/relu_conv"
  type: "ReLU"
}
# layer {
#   name: "Gather4"
#   type: "Gather"
#   bottom: "loss2/conv/bn"
#  top: "loss2/conv/bn_gather"
#}
layer {
  bottom: "loss2/conv/bn"
  top: "loss2/fc"
  name: "loss2/fc"
  type: "InnerProduct"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  inner_product_param {
    num_output: 1024
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
####
layer {
  name: "loss2/fc/reshape"
  type: "Reshape"
  bottom: "loss2/fc"
  top: "loss2/fc/reshape"
  reshape_param{
    shape{ dim: [-1,1024,1,1]}
  }
}
####
## BN_DATA
layer {
  bottom: "loss2/fc/reshape"
  name: "loss2/fc/bn_new"
  top: "loss2/fc/bn"
  type: "BatchNorm"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    
    moving_average_fraction: 0.99
    eps: 0.001
  }
}
layer {
  name: "loss2/fc/bn_scale"
  type: "Scale"
  bottom: "loss2/fc/bn"
  top: "loss2/fc/bn"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  bottom: "loss2/fc/bn"
  top: "loss2/fc/bn"
  name: "loss2/relu_fc"
  type: "ReLU"
}
layer {
  bottom: "loss2/fc/bn"
  top: "cls_score"
  name: "cls_score"
  type: "InnerProduct"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
   decay_mult: 0
  }
  inner_product_param {
    num_output: 5
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  bottom: "loss2/fc/bn"
  top: "bbox_pred"
  name: "bbox_pred"
  type: "InnerProduct"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
   decay_mult: 0
  }
  inner_product_param {
    num_output: 20 
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  propagate_down: 1
  propagate_down: 0
  top: "loss_cls"
  loss_weight: 1
}
layer {
  name: "loss_bbox"
  type: "SmoothL1Loss"
  bottom: "bbox_pred"
  bottom: "bbox_targets"
  bottom: "bbox_inside_weights"
  bottom: "bbox_outside_weights"
  top: "loss_bbox"
  loss_weight: 1
}
